/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:imageEdit:844393:
  appc.background(230);
} //_CODE_:imageEdit:844393:

public void imageData_changed(GTextArea source, GEvent event) { //_CODE_:imageData:934297:
  i_h.change_image_data(imageData.getText());
  
} //_CODE_:imageData:934297:

public void save_file_click1(GButton source, GEvent event) { //_CODE_:save_file:909706:
  i_h.save_image_data();
} //_CODE_:save_file:909706:

public void go_to_prev(GButton source, GEvent event) {
  i_h.i_d.get_prev_table();
}

public void go_to_next(GButton source, GEvent event) {
  i_h.i_d.get_next_table();

}


public void slider_changed(GCustomSlider source, GEvent event) { //_CODE_:slider:219774:
} //_CODE_:slider:219774:

public void set_quality(GButton source, GEvent event) { //_CODE_:quality:340943:
  i_h.i_d.set_quality(slider.getValueI());
  i_h.save_image_data();
} //_CODE_:quality:340943:

// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  imageEdit = GWindow.getWindow(this, "Window title", 0, 0, 400, 400, JAVA2D);
  imageEdit.noLoop();
  imageEdit.setActionOnClose(G4P.KEEP_OPEN);
  imageEdit.addDrawHandler(this, "win_draw1");
  imageData = new GTextArea(imageEdit, 0, 50, 400, 380, G4P.SCROLLBARS_BOTH);
  imageData.setOpaque(true);
  imageData.addEventHandler(this, "imageData_changed");
  label1 = new GLabel(imageEdit, 10, 10, 80, 40);
  label1.setText("Data:");
  label1.setOpaque(false);
  save_file = new GButton(imageEdit, 80, 10, 80, 20);
  save_file.setText("Save");
  save_file.addEventHandler(this, "save_file_click1");
  slider = new GCustomSlider(imageEdit, 200, 0, 192, 40, "grey_blue");
  slider.setShowValue(true);
  slider.setLimits(50, 1, 100);
  slider.setNumberFormat(G4P.INTEGER, 0);
  slider.setOpaque(false);
  slider.addEventHandler(this, "slider_changed");
  slide_label = new GLabel(imageEdit, 255, 25, 80, 20);
  slide_label.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  slide_label.setText("quality");
  slide_label.setOpaque(false);
  quality = new GButton(imageEdit, 80, 35, 80, 22);
  quality.setText("Set Quality");
  quality.addEventHandler(this, "set_quality");
  prev = new GButton(imageEdit, 10, 40, 30, 15);
  prev.setText("<");
  prev.addEventHandler(this, "go_to_prev");
  next = new GButton(imageEdit, 40, 40, 30, 15);
  next.setText(">");
  next.addEventHandler(this, "go_to_next");
  
  imageEdit.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow imageEdit;
GCustomSlider slider; 
GTextArea imageData; 
GLabel label1; 
GLabel slide_label; 
GButton save_file; 
GButton quality;
GButton next;
GButton prev;
